openapi: 3.0.3

info:
    title: orders API
    description: API that allows you to manage orders for coffeeMesh
    version: 1.0.0

servers:
    - url: https://coffeemesh.
      description: main production server
    - url: https://coffeemesh-staging.com
      description: staging server for testing purposes only

paths:
    /orders:
        get:
            summary: returns a list of orders
            operationId: getOrders
            responses:
                "200":
                    description: A JSON array of Orders
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    orders:
                                        type: array
                                        items:
                                            $ref: "#/components/schemas/GetOrderSchema"
                                required: orders

        post:
            summary: creates a new order
            operationId: createOrder
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/CreateOrderSchema"

    /orders/{order_id}:
        parameters:
            - in: path
              name: order_id
              required: true
              schema:
                  type: string
                  format: uuid

        get:
            summary: Returns the details of a specific order
            operationId: getOrder
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/GetOrderSchema"
                    "404":
                        $ref: "#/components/responses/NotFound"
        put:
            summary: updates a specific order
            operationId: updateOrder
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/CreateOrderSchema"
        delete:
            operationId: deleteOrder

    /orders/{order_id}/pay:
        post:
            operationId: payOrder

    /orders/{order_id}/cancel:
        post:
            operationId: cancelOrder

components:
    responses:
        NotFound:
            description: The specified resource was not found.
            content:
                application/json:
                    schema:
                        $ref: "#/components/schemas/Error"

        UnprocessableEntity:
            description: The payload contains invalid values
            content:
                application/json:
                    schema:
                        $ref: "#/components/schemas/Error"

    schemas:
        OrderItemSchema:
            type: object
            properties:
                product:
                    type: string
                size:
                    type: string
                    enum:
                        - small
                        - medium
                        - big
                quantity:
                    type: integer
                    required: false
                    default: 1
            required:
                - product
                - size

        CreateOrderSchema:
            type: object
            properties:
                order:
                    type: array
                    items:
                        $ref: "#/OrderItemSchema"

        GetOrderSchema:
            allOf:
                $ref: "#/components/schemas/CreateOrderSchema"
                type: object
                properties:
                    status:
                        type: string
                        enum:
                            - created
                            - paid
                            - progress
                            - cancelled
                            - dispatched
                            - delivered
                    created:
                        type: string
                        format: date-time

        Error:
            type: object
            properties:
                detail:
                    type: string
            required:
                - detail

    securitySchemes:
        openid:
            type: openIdConnect
            openIdConnectUrl: https://coffeemesh-dev.eu.auth0.com/.wellknown/openid-configuration

        oauth2:
            type: oauth2
            flows:
                clientCredentials:
                    tokenUrl: https://coffeemesh-dev.eu.oath0.com/oauth/token
                    scopes: {}

        bearerAuth:
            type: http
            scheme: bearer
            bearerFormat: JWT



security:
  - oauth2:
      - getOrders
      - createOrder
      - getOrder
      - updateOrder
      - deleteOrder
      - payOrder
      - cancelOrder
  - bearerAuth:
      - getOrders
      - createOrder
      - getOrder
      - updateOrder
      - deleteOrder
      - payOrder
      - cancelOrder
